cmake_minimum_required(VERSION 3.25.1)

include(cmake/vcpkg.cmake)

# 设定工程名
project(
  Cpp-Examples
  VERSION 0.0.1
  DESCRIPTION "This is Cpp-Examples"
  HOMEPAGE_URL "https://github.com/RealChuan/Cpp-Examples"
  LANGUAGES C CXX)

include(cmake/common.cmake)

find_package(unofficial-breakpad CONFIG REQUIRED)
if(unofficial-breakpad_FOUND)
  message(STATUS "found unofficial-breakpad")
endif()
find_package(benchmark CONFIG REQUIRED)
if(benchmark_FOUND)
  message(STATUS "found benchmark")
endif()
find_package(crashpad CONFIG REQUIRED)
if(crashpad_FOUND)
  message(STATUS "found crashpad")
endif()
find_package(CURL CONFIG REQUIRED)
if(CURL_FOUND)
  message(STATUS "found CURL")
endif()
find_package(efsw CONFIG REQUIRED)
if(efsw_FOUND)
  message(STATUS "found efsw")
endif()
find_package(glog CONFIG REQUIRED)
if(glog_FOUND)
  message(STATUS "found glog")
endif()
find_package(GTest CONFIG REQUIRED)
if(GTest_FOUND)
  message(STATUS "found GTest")
endif()
find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
  message(STATUS "found OpenSSL")
endif()
find_package(Threads REQUIRED)
if(Threads_FOUND)
  message(STATUS "found Threads")
endif()

include(CTest)
enable_testing()

add_subdirectory(Algorithm)
add_subdirectory(BinaryTree)
add_subdirectory(Breakpad)
add_subdirectory(ByteOrder)
add_subdirectory(CountDownLatch)
add_subdirectory(Crashpad)
add_subdirectory(Curl)
add_subdirectory(GlobMatch)
add_subdirectory(DesignPattern)
add_subdirectory(Glog)
add_subdirectory(LinkedList)
add_subdirectory(Memcpy)
add_subdirectory(MonitorDir)
add_subdirectory(MonitorDir_EFSW)
add_subdirectory(Mutex)
add_subdirectory(OpenSSL)
add_subdirectory(SafeCallback)
add_subdirectory(Thread)

if(CMAKE_HOST_LINUX)
  add_subdirectory(Client)
  add_subdirectory(Icmp)
  add_subdirectory(Server)
endif()

include(cmake/build_info.cmake)
